stages:
  - test
  - build
  - deploy_dev

django tests:
  stage: test
  image: python:3-alpine
  script:
    - pip install -r requirements.txt
    - mkdir db
    - python manage.py migrate
    - python manage.py test
  tags:
    - dev
docker build:
  stage: build
  image: docker:stable
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag="latest"
        echo " Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag="$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t registry.gitlab.com/msdos760/docker-cicd-django .
    - docker push registry.gitlab.com/msdos760/docker-cicd-django
  tags:
    - dev

deploy to dev:
  stage: deploy_dev
  script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker pull ${CI_REGISTRY_IMAGE}:${tag}
    - docker rm -f blog || echo "no blog found"
    - docker run --name blog -d -p 80:8000 -v db:/code/db ${CI_REGISTRY_IMAGE}:${tag}
  tags:
    - dev-shell